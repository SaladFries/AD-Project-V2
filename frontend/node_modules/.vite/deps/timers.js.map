{
  "version": 3,
  "sources": ["../../timers/index.js"],
  "sourcesContent": ["\nexports.every = function(str) {\n  return new Every(str);\n};\n\n/*\n  Time map\n*/\n\nvar time = {\n  millisecond: 1,\n  second: 1000,\n  minute: 60000,\n  hour: 3600000,\n  day: 86400000\n};\n\nfor (var key in time) {\n  if (key === 'millisecond') {\n    time.ms = time[key];\n  } else {\n    time[key.charAt(0)] = time[key];\n  }\n  time[key + 's'] = time[key];\n}\n\n\n/*\n  Every constructor\n*/\n\nfunction Every(str) {\n  this.count = 0;\n  var m = parse(str);\n  if (m) {\n    this.time = Number(m[0]) * time[m[1]];\n    this.type = m[1];\n  }\n}\n\nEvery.prototype.do = function(cb) {\n  if (this.time) {\n    this.interval = setInterval(callback, this.time);\n  }\n\n  var that = this;\n  function callback() {\n    that.count++;\n    cb.call(that);\n  }\n  return this;\n};\n\nEvery.prototype.stop = function() {\n  if (this.interval) {\n    clearInterval(this.interval);\n    delete this.interval;\n  }\n  return this;\n};\n\n\n/*\n  Convert string to milliseconds\n\n    ms, millisecond(s)?\n    s, second(s)?\n    m, minute(s)?\n    h, hour(s)?\n    d, day(s)?\n*/\nvar reg = /^\\s*(\\d+(?:\\.\\d+)?)\\s*([a-z]+)\\s*$/;\n\nfunction parse(str) {\n  var m = str.match(reg);\n  if (m && time[m[2]]) {\n    return m.slice(1);\n  }\n  return null;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AACA,YAAQ,QAAQ,SAAS,KAAK;AAC5B,aAAO,IAAI,MAAM,GAAG;AAAA,IACtB;AAMA,QAAI,OAAO;AAAA,MACT,aAAa;AAAA,MACb,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,KAAK;AAAA,IACP;AAEA,SAAS,OAAO,MAAM;AACpB,UAAI,QAAQ,eAAe;AACzB,aAAK,KAAK,KAAK,GAAG;AAAA,MACpB,OAAO;AACL,aAAK,IAAI,OAAO,CAAC,CAAC,IAAI,KAAK,GAAG;AAAA,MAChC;AACA,WAAK,MAAM,GAAG,IAAI,KAAK,GAAG;AAAA,IAC5B;AAPS;AAcT,aAAS,MAAM,KAAK;AAClB,WAAK,QAAQ;AACb,UAAI,IAAI,MAAM,GAAG;AACjB,UAAI,GAAG;AACL,aAAK,OAAO,OAAO,EAAE,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;AACpC,aAAK,OAAO,EAAE,CAAC;AAAA,MACjB;AAAA,IACF;AAEA,UAAM,UAAU,KAAK,SAAS,IAAI;AAChC,UAAI,KAAK,MAAM;AACb,aAAK,WAAW,YAAY,UAAU,KAAK,IAAI;AAAA,MACjD;AAEA,UAAI,OAAO;AACX,eAAS,WAAW;AAClB,aAAK;AACL,WAAG,KAAK,IAAI;AAAA,MACd;AACA,aAAO;AAAA,IACT;AAEA,UAAM,UAAU,OAAO,WAAW;AAChC,UAAI,KAAK,UAAU;AACjB,sBAAc,KAAK,QAAQ;AAC3B,eAAO,KAAK;AAAA,MACd;AACA,aAAO;AAAA,IACT;AAYA,QAAI,MAAM;AAEV,aAAS,MAAM,KAAK;AAClB,UAAI,IAAI,IAAI,MAAM,GAAG;AACrB,UAAI,KAAK,KAAK,EAAE,CAAC,CAAC,GAAG;AACnB,eAAO,EAAE,MAAM,CAAC;AAAA,MAClB;AACA,aAAO;AAAA,IACT;AAAA;AAAA;",
  "names": []
}
